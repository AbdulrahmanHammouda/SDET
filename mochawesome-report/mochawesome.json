{
  "stats": {
    "suites": 1,
    "tests": 21,
    "passes": 7,
    "pending": 0,
    "failures": 14,
    "start": "2024-01-30T17:00:24.775Z",
    "end": "2024-01-30T17:00:24.985Z",
    "duration": 210,
    "testsRegistered": 21,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d2a4415-219d-4916-ae7c-6066efd9bab4",
      "title": "",
      "fullFile": "C:\\Users\\Abdul\\Desktop\\SDET\\test\\api.test.js",
      "file": "\\test\\api.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
          "title": "API Routes Test",
          "fullFile": "C:\\Users\\Abdul\\Desktop\\SDET\\test\\api.test.js",
          "file": "\\test\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new user",
              "fullTitle": "API Routes Test should create a new user",
              "timedOut": false,
              "duration": 67,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/users')\n  .send({ name: 'user', email: 'user@gmail.com', password: 'user123' })\n  .expect(200)\n  .end(done);",
              "err": {
                "message": "Error: expected 200 \"OK\", got 401 \"Unauthorized\"",
                "estack": "Error: expected 200 \"OK\", got 401 \"Unauthorized\"\n    at Context.<anonymous> (test\\api.test.js:12:8)\n    at process.processImmediate (node:internal/timers:478:21)\n----\n    at Test._assertStatus (node_modules\\supertest\\lib\\test.js:252:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:308:13\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:867:3)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "d15110e1-c755-4d75-9669-d12284e60099",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should authenticate user and get token",
              "fullTitle": "API Routes Test should authenticate user and get token",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/auth')\n  .send({ email: 'user@gmail.com', password: 'user123' })\n  .expect(200)\n  .end((err, res) => {\n    if (err) return done(err);\n    assert(res.body.token, 'Token not provided in response');\n    authToken = res.body.token; \n    done();\n  });",
              "err": {},
              "uuid": "33cb79bc-6ac4-4c22-a7d3-abd9928fe2db",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new user",
              "fullTitle": "API Routes Test should create a new user",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/users')\n  .send({ name: 'user1', email: 'user1@gmail.com', password: 'user123' })\n  .expect(200)\n  .end(done);",
              "err": {
                "message": "Error: expected 200 \"OK\", got 401 \"Unauthorized\"",
                "estack": "Error: expected 200 \"OK\", got 401 \"Unauthorized\"\n    at Context.<anonymous> (test\\api.test.js:33:8)\n    at process.processImmediate (node:internal/timers:478:21)\n----\n    at Test._assertStatus (node_modules\\supertest\\lib\\test.js:252:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:308:13\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:867:3)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "8e92c2de-14bc-4611-b4ec-d0285389bc84",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should authenticate newly created user and get token",
              "fullTitle": "API Routes Test should authenticate newly created user and get token",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/auth')\n  .send({ email: 'user1@gmail.com', password: 'user123' })\n  .expect(200)\n  .end((err, res) => {\n    if (err) return done(err);\n    assert(res.body.token, 'Token not provided in response');\n    authToken = res.body.token; \n    done();\n  });",
              "err": {},
              "uuid": "dc8819a2-c603-4e64-84b9-66f507a715be",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should get user by token",
              "fullTitle": "API Routes Test should get user by token",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .get('/api/v1/users')\n  .set('Authorization', authToken)\n  .expect(200)\n  .end((err, res) => {\n    if (err) return done(err);\n    assert.strictEqual(res.body.name, 'user1');\n    assert.strictEqual(res.body.email, 'user1@gmail.com');\n    done();\n  });",
              "err": {},
              "uuid": "1d010760-0227-46d6-a087-53d7bf33232e",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user by token",
              "fullTitle": "API Routes Test should update user by token",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .patch('/api/v1/users')\n  .set('Authorization', authToken)\n  .send({ name: 'newName', email: 'new_email@gmail.com', password: 'newpassword123' })\n  .expect(200)\n  .end(done);",
              "err": {},
              "uuid": "d64caab6-c243-4990-a5c4-5608424bccf8",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete user by token",
              "fullTitle": "API Routes Test should delete user by token",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .delete('/api/v1/users')\n  .set('Authorization', authToken)\n  .expect(200)\n  .end(done);",
              "err": {
                "message": "Error: expected 200 \"OK\", got 403 \"Forbidden\"",
                "estack": "Error: expected 200 \"OK\", got 403 \"Forbidden\"\n    at Context.<anonymous> (test\\api.test.js:75:8)\n    at process.processImmediate (node:internal/timers:478:21)\n----\n    at Test._assertStatus (node_modules\\supertest\\lib\\test.js:252:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:308:13\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:867:3)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "32f8854f-b986-4608-8c59-f15a1ca0b02e",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete all users",
              "fullTitle": "API Routes Test should delete all users",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .delete('/api/v1/all-users')\n  .send({ key_admin: 'keyadmin123' })\n  .expect(200)\n  .end(done);",
              "err": {},
              "uuid": "5e1543cb-0def-47f1-a5f0-2646d3264501",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should authenticate user and get token",
              "fullTitle": "API Routes Test should authenticate user and get token",
              "timedOut": false,
              "duration": 6,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/auth')\n  .send({ email: 'user@gmail.com', password: 'user123' })\n  .expect(200)\n  .end((err, res) => {\n    if (err) return done(err);\n    assert(res.body.token, 'Token not provided in response');\n    authToken = res.body.token; \n    done();\n  });",
              "err": {
                "message": "Error: expected 200 \"OK\", got 401 \"Unauthorized\"",
                "estack": "Error: expected 200 \"OK\", got 401 \"Unauthorized\"\n    at Context.<anonymous> (test\\api.test.js:91:8)\n    at process.processImmediate (node:internal/timers:478:21)\n----\n    at Test._assertStatus (node_modules\\supertest\\lib\\test.js:252:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:308:13\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:867:3)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "6089cc49-71cb-4f1a-ac95-e1515ff42b03",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new user",
              "fullTitle": "API Routes Test should create a new user",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/users')\n  .send({ name: 'user5', email: 'user5@gmail.com', password: 'user123' })\n  .expect(200)\n  .end((err, res) => {\n    if (err) return done(err);\n    assert(res.body.token, 'Token not provided in response');\n    userId = res.body.id; // Save the ID of the created user\n    done();\n  });",
              "err": {
                "message": "AssertionError: Token not provided in response",
                "estack": "AssertionError [ERR_ASSERTION]: Token not provided in response\n    at Test.<anonymous> (test\\api.test.js:107:9)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:172:8)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:857:12)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "7a06f5de-f639-4e38-bc99-007b2f74bc6e",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new user",
              "fullTitle": "API Routes Test should create a new user",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/users')\n  .send({ name: 'user', email: 'user@gmail.com', password: 'user123' })\n  .expect(200)\n  .end(done);",
              "err": {},
              "uuid": "a4193ff4-30f3-4e24-adf4-bc610555b6f9",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete the created user",
              "fullTitle": "API Routes Test should delete the created user",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .delete(`/api/v1/users/${userId}`)\n  .set('Authorization', authToken)\n  .expect(200)\n  .end(done);",
              "err": {
                "message": "ReferenceError: userId is not defined",
                "estack": "ReferenceError: userId is not defined\n    at Context.<anonymous> (test\\api.test.js:122:32)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "4e634c37-b9b0-42cd-854c-d313efe8cdec",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail to authenticate a recently deleted user",
              "fullTitle": "API Routes Test should fail to authenticate a recently deleted user",
              "timedOut": false,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/auth')\n  .send({ email: 'user@gmail.com', password: 'user123' })\n  .expect(401)\n  .end(done);",
              "err": {
                "message": "Error: expected 401 \"Unauthorized\", got 200 \"OK\"",
                "estack": "Error: expected 401 \"Unauthorized\", got 200 \"OK\"\n    at Context.<anonymous> (test\\api.test.js:132:8)\n    at process.processImmediate (node:internal/timers:478:21)\n----\n    at Test._assertStatus (node_modules\\supertest\\lib\\test.js:252:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:308:13\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:857:12)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "16c5c311-8a6c-4ad1-9d69-e3285c022995",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create multiple users",
              "fullTitle": "API Routes Test should create multiple users",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/users')\n  .send({ name: 'user1', email: 'user1@gmail.com', password: 'user123' })\n  .expect(200)\n  .end(() => {\n    request(appUrl)\n      .post('/api/v1/users')\n      .send({ name: 'user2', email: 'user2@gmail.com', password: 'user123' })\n      .expect(200)\n      .end(done);\n  });",
              "err": {},
              "uuid": "45fd99e4-66c4-4c2d-9aae-cf686bfc568a",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should authenticate and get details for one of the users",
              "fullTitle": "API Routes Test should authenticate and get details for one of the users",
              "timedOut": false,
              "duration": 4,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .get('/api/v1/users')\n  .set('Authorization', authToken)\n  .expect(200)\n  .end((err, res) => {\n    if (err) return done(err);\n    // Assuming the response contains an array of users, check details of the first user\n    const user = res.body[0];\n    assert.strictEqual(user.name, 'user1');\n    assert.strictEqual(user.email, 'user1@gmail.com');\n    done();\n  });",
              "err": {
                "message": "Error: expected 200 \"OK\", got 403 \"Forbidden\"",
                "estack": "Error: expected 200 \"OK\", got 403 \"Forbidden\"\n    at Context.<anonymous> (test\\api.test.js:154:8)\n    at process.processImmediate (node:internal/timers:478:21)\n----\n    at Test._assertStatus (node_modules\\supertest\\lib\\test.js:252:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:308:13\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:867:3)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "fb8bbf0f-3e25-40dd-8369-e8997160f7c0",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update details for one of the users",
              "fullTitle": "API Routes Test should update details for one of the users",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .patch(`/api/v1/users/${userId}`)\n  .set('Authorization', authToken)\n  .send({ name: 'updatedName', email: 'updated_email@gmail.com', password: 'updatedpassword123' })\n  .expect(200)\n  .end(done);",
              "err": {
                "message": "ReferenceError: userId is not defined",
                "estack": "ReferenceError: userId is not defined\n    at Context.<anonymous> (test\\api.test.js:167:31)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "8b9165e6-b76e-41b8-8be1-3947cba01c08",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail to authenticate with invalid token",
              "fullTitle": "API Routes Test should fail to authenticate with invalid token",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .get('/api/v1/users')\n  .set('Authorization', 'invalidtoken')\n  .expect(401)\n  .end(done);",
              "err": {
                "message": "Error: expected 401 \"Unauthorized\", got 403 \"Forbidden\"",
                "estack": "Error: expected 401 \"Unauthorized\", got 403 \"Forbidden\"\n    at Context.<anonymous> (test\\api.test.js:178:8)\n    at process.processImmediate (node:internal/timers:478:21)\n----\n    at Test._assertStatus (node_modules\\supertest\\lib\\test.js:252:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:308:13\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:867:3)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "0582dc26-902a-41b5-bdb9-931d6d3b40bc",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail to create a user with invalid body",
              "fullTitle": "API Routes Test should fail to create a user with invalid body",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/users')\n  .send({ invalidKey: 'invalidValue' })\n  .expect(400)\n  .end(done);",
              "err": {
                "message": "Error: expected 400 \"Bad Request\", got 200 \"OK\"",
                "estack": "Error: expected 400 \"Bad Request\", got 200 \"OK\"\n    at Context.<anonymous> (test\\api.test.js:186:8)\n    at process.processImmediate (node:internal/timers:478:21)\n----\n    at Test._assertStatus (node_modules\\supertest\\lib\\test.js:252:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:308:13\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:857:12)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "fd63e885-9cc7-4721-98e9-8d744b390766",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create two new users with different names",
              "fullTitle": "API Routes Test should create two new users with different names",
              "timedOut": false,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/users')\n  .send({ name: 'user3', email: 'user3@gmail.com', password: 'user123' })\n  .expect(200)\n  .end((err, res) => {\n    if (err) return done(err);\n    assert(res.body.id, 'ID not provided in response');\n    userId1 = res.body.id; // Save the ID of the first created user\n    done();\n  });",
              "err": {
                "message": "AssertionError: ID not provided in response",
                "estack": "AssertionError [ERR_ASSERTION]: ID not provided in response\n    at Test.<anonymous> (test\\api.test.js:196:9)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:172:8)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:857:12)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "1874e8fb-2d27-4115-83e8-f8c95ae56880",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create another user with a different name",
              "fullTitle": "API Routes Test should create another user with a different name",
              "timedOut": false,
              "duration": 6,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .post('/api/v1/users')\n  .send({ name: 'user4', email: 'user4@gmail.com', password: 'user123' })\n  .expect(200)\n  .end((err, res) => {\n    if (err) return done(err);\n    assert(res.body.id, 'ID not provided in response');\n    userId2 = res.body.id; // Save the ID of the second created user\n    done();\n  });",
              "err": {
                "message": "AssertionError: ID not provided in response",
                "estack": "AssertionError [ERR_ASSERTION]: ID not provided in response\n    at Test.<anonymous> (test\\api.test.js:209:9)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:172:8)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\supertest\\lib\\test.js:125:7\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:857:12)\n    at C:\\Users\\Abdul\\Desktop\\SDET\\node_modules\\superagent\\lib\\node\\index.js:1070:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "3c938ca4-75b7-483c-af51-16be606e3004",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the data of one user to be like the other",
              "fullTitle": "API Routes Test should update the data of one user to be like the other",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request(appUrl)\n  .patch(`/api/v1/users/${userId1}`)\n  .set('Authorization', authToken)\n  .send({ name: 'user4', email: 'user4@gmail.com' }) // Update user1 to have the same data as user2\n  .expect(400) // Expecting a 400 error because users cannot have duplicate names\n  .end(done);",
              "err": {
                "message": "ReferenceError: userId1 is not defined",
                "estack": "ReferenceError: userId1 is not defined\n    at Context.<anonymous> (test\\api.test.js:217:31)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "1010041c-d0ea-4adf-bf42-c0d96e32ee98",
              "parentUUID": "d43e0e1d-6a37-4a47-9e93-fa1a4c846fdc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33cb79bc-6ac4-4c22-a7d3-abd9928fe2db",
            "dc8819a2-c603-4e64-84b9-66f507a715be",
            "1d010760-0227-46d6-a087-53d7bf33232e",
            "d64caab6-c243-4990-a5c4-5608424bccf8",
            "5e1543cb-0def-47f1-a5f0-2646d3264501",
            "a4193ff4-30f3-4e24-adf4-bc610555b6f9",
            "45fd99e4-66c4-4c2d-9aae-cf686bfc568a"
          ],
          "failures": [
            "d15110e1-c755-4d75-9669-d12284e60099",
            "8e92c2de-14bc-4611-b4ec-d0285389bc84",
            "32f8854f-b986-4608-8c59-f15a1ca0b02e",
            "6089cc49-71cb-4f1a-ac95-e1515ff42b03",
            "7a06f5de-f639-4e38-bc99-007b2f74bc6e",
            "4e634c37-b9b0-42cd-854c-d313efe8cdec",
            "16c5c311-8a6c-4ad1-9d69-e3285c022995",
            "fb8bbf0f-3e25-40dd-8369-e8997160f7c0",
            "8b9165e6-b76e-41b8-8be1-3947cba01c08",
            "0582dc26-902a-41b5-bdb9-931d6d3b40bc",
            "fd63e885-9cc7-4721-98e9-8d744b390766",
            "1874e8fb-2d27-4115-83e8-f8c95ae56880",
            "3c938ca4-75b7-483c-af51-16be606e3004",
            "1010041c-d0ea-4adf-bf42-c0d96e32ee98"
          ],
          "pending": [],
          "skipped": [],
          "duration": 180,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}